buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:3.4.0'
    }
}

import aQute.bnd.gradle.Bundle

apply plugin: 'java'
apply plugin: 'maven'

group 'de.muspellheim'
version '1.2.0'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
    jcenter()
}

dependencies {
    testCompile(
            'org.testfx:testfx-core:4.+',
            'org.testfx:testfx-junit:4.+',
            'junit:junit:4.+'
    )
}

task bundleJar(type: Bundle) {
    bndfile = 'bundle.bnd'
    baseName = 'de.muspellheim.javafx'
    classifier = 'bundle'
    from sourceSets.main.output
    sourceSet = sourceSets.main
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives bundleJar
}

def bintrayUser = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
def bintrayApiKey = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://api.bintray.com/maven/falkoschumann/maven/${project.name}/;publish=0") {
                authentication(userName: bintrayUser, password: bintrayApiKey)
            }
        }
    }
}

task distZip(type: Zip) {
    from 'src/dist'
    from jar.outputs.files
    from sourcesJar.outputs.files
    from javadocJar.outputs.files
    from(projectDir) {
        include('README.md', 'CHANGELOG.md', 'LICENSE.txt')
        rename { fileName -> fileName.replace('.md', '.txt') }
    }
}
